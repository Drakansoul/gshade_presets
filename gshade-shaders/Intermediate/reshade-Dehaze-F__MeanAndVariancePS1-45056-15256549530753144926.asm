//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__MeanAndVariance              texture  float4          2d            t10      1 
// __V__Maximum0                     texture  float4          2d            t12      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   x           0   TARGET   float   x   
// SV_TARGET                1   x           1   TARGET   float   x   
// SV_TARGET                2   x           2   TARGET   float   x   
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t10
dcl_resource_texture2d (float,float,float,float) t12
dcl_input_ps linear v1.xy
dcl_output o0.x
dcl_output o1.x
dcl_output o2.x
dcl_temps 3
mov r0.x, l(0)
mov r0.zw, l(0,0,0,0)
mov r1.xyz, l(0,-7,-1,0)
loop 
  breakc_z r1.z
  itof r1.w, r1.y
  mul r0.y, r1.w, l(0.001873)
  add r2.xy, r0.xyxx, v1.xyxx
  sample_indexable(texture2d)(float,float,float,float) r2.zw, r2.xyxx, t10.zwxy, s0
  add r0.w, r0.w, r2.z
  add r1.x, r1.x, r2.w
  sample_indexable(texture2d)(float,float,float,float) r0.y, r2.xyxx, t12.yxzw, s0
  max r0.z, r0.y, r0.z
  iadd r1.y, r1.y, l(1)
  ilt r1.z, r1.y, l(8)
endloop 
mov o2.x, r0.z
mul r0.x, r0.w, r0.w
mul o0.x, r0.w, l(0.004444)
mad r0.x, -r0.x, l(0.004444), r1.x
mul o1.x, r0.x, l(0.004444)
ret 
// Approximately 22 instruction slots used
