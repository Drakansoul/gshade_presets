//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Blend;                         // Offset:    0 Size:     4
//   float smooth;                      // Offset:    4 Size:     4 [unused]
//   float Rim;                         // Offset:    8 Size:     4 [unused]
//   float3 light;                      // Offset:   16 Size:    12 [unused]
//   int BLUR_ITERATION_;               // Offset:   28 Size:     4
//   float bloom;                       // Offset:   32 Size:     4
//   float MaxDepth;                    // Offset:   36 Size:     4
//   float MinDepth;                    // Offset:   40 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__TexColor                     texture  float4          2d             t4      1 
// __V__TexRim                       texture  float4          2d             t8      1 
// __V__TexHBlur                     texture  float4          2d            t10      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[3], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t8
dcl_resource_texture2d (float,float,float,float) t10
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 5
sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t4.xyzw, s0
sample_l_indexable(texture2d)(float,float,float,float) r0.w, v1.xyxx, t2.yzwx, s0, l(0.000000)
mad r1.x, -r0.w, l(999.000000), l(1000.000000)
div r0.w, r0.w, r1.x
ineg r1.x, cb0[1].w
ige r1.y, cb0[1].w, r1.x
mov r2.x, l(0)
mov r3.xyz, l(0,0,0,0)
mov r1.zw, r1.xxxy
loop 
  breakc_z r1.w
  imax r2.z, -r1.z, r1.z
  iadd r2.z, -r2.z, cb0[1].w
  ishl r2.w, r1.z, l(1)
  itof r2.w, r2.w
  add r2.w, r2.w, l(0.500000)
  mul r2.y, r2.w, l(0.000468)
  add r2.yw, r2.xxxy, v1.xxxy
  sample_indexable(texture2d)(float,float,float,float) r4.xyz, r2.ywyy, t10.xyzw, s0
  itof r2.y, r2.z
  mad r3.xyz, r2.yyyy, r4.xyzx, r3.xyzx
  iadd r1.z, r1.z, l(1)
  ige r1.w, cb0[1].w, r1.z
endloop 
imul null, r1.x, cb0[1].w, cb0[1].w
itof r1.x, r1.x
div r1.xyz, r3.xyzx, r1.xxxx
sample_indexable(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t8.xyzw, s0
mad_sat r1.xyz, r1.xyzx, cb0[2].xxxx, r2.xyzx
add r2.xyz, r0.xyzx, r1.xyzx
movc r2.xyz, cb0[0].xxxx, l(0,0,0,0), r2.xyzx
ieq r1.w, cb0[0].x, l(1)
add r1.xyz, -r1.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r1.xyz, r0.xyzx, r1.xyzx
movc r1.xyz, r1.wwww, r1.xyzx, r2.xyzx
lt r1.w, r0.w, cb0[2].y
lt r0.w, cb0[2].z, r0.w
and r0.w, r0.w, r1.w
and r0.w, r0.w, l(0x3f800000)
add r1.xyz, -r0.xyzx, r1.xyzx
mad o0.xyz, r0.wwww, r1.xyzx, r0.xyzx
ret 
// Approximately 42 instruction slots used
