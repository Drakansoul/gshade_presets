//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float FocusPlane;                  // Offset:    0 Size:     4 [unused]
//   float FocusRange;                  // Offset:    4 Size:     4 [unused]
//   float FocusPlaneMaxRange;          // Offset:    8 Size:     4 [unused]
//   float BlurAngle;                   // Offset:   12 Size:     4 [unused]
//   float BlurLength;                  // Offset:   16 Size:     4 [unused]
//   float BlurQuality;                 // Offset:   20 Size:     4
//   float ScaleFactor;                 // Offset:   24 Size:     4
//   int BlurType;                      // Offset:   28 Size:     4
//   float2 FocusPoint;                 // Offset:   32 Size:     8
//   float3 FocusPointBlendColor;       // Offset:   48 Size:    12
//   float FocusPointBlendFactor;       // Offset:   60 Size:     4
//   bool FocusPointViewFilterCircleOnMouseDown;// Offset:   64 Size:     4 [unused]
//   bool FocusPointFadeBlurInFeatherBand;// Offset:   68 Size:     4 [unused]
//   float FilterCircleRadius;          // Offset:   72 Size:     4 [unused]
//   float2 FilterCircleDeformFactors;  // Offset:   80 Size:     8 [unused]
//   float FilterCircleRotationFactor;  // Offset:   88 Size:     4 [unused]
//   float FilterCircleFeather;         // Offset:   92 Size:     4 [unused]
//   float HighlightGain;               // Offset:   96 Size:     4
//   float BlendFactor;                 // Offset:  100 Size:     4
//   float2 MouseCoords;                // Offset:  104 Size:     8 [unused]
//   bool LeftMouseDown;                // Offset:  112 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s1                              sampler      NA          NA             s1      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// __V__DirectionalDepthBlur__texDownsampledBackBuffer    texture  float4          2d             t4      1 
// __V__DirectionalDepthBlur__texFilterCircle    texture  float4          2d             t8      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
// TEXCOORD                 1     zw        1     NONE   float     zw
// TEXCOORD                 2   x           2     NONE   float   x   
// TEXCOORD                 3    y          2     NONE   float    y  
// TEXCOORD                 4     z         2     NONE   float       
// TEXCOORD                 5   xyzw        3     NONE   float   xy  
// TEXCOORD                 6   xy          4     NONE   float       
// TEXCOORD                 8     zw        4     NONE   float       
// TEXCOORD                 7   xy          5     NONE   float       
// TEXCOORD                 9     z         5     NONE   float       
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[7], immediateIndexed
dcl_sampler s0, mode_default
dcl_sampler s1, mode_default
dcl_resource_texture2d (float,float,float,float) t2
dcl_resource_texture2d (float,float,float,float) t4
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_input_ps linear v1.zw
dcl_input_ps linear v2.x
dcl_input_ps linear v2.y
dcl_input_ps linear v3.xy
dcl_output o0.xyzw
dcl_temps 9
sample_l_indexable(texture2d)(float,float,float,float) r0.x, v1.xyxx, t8.xyzw, s0, l(0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.yzw, v3.xyxx, t4.wxyz, s1, l(0.000000)
max r1.xyz, r0.yzwy, l(0.000000, 0.000000, 0.000000, 0.000000)
min r1.xyz, r1.xyzx, l(1.490000, 1.490000, 1.490000, 0.000000)
add r1.xyz, -r1.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
div r1.xyz, r0.yzwy, r1.xyzx
add r2.xy, -v1.xyxx, cb0[2].xyxx
mul r2.xy, r2.xyxx, l(0.000536, 0.000536, 0.000000, 0.000000)
movc r2.xy, cb0[1].wwww, r2.xyxx, v1.zwzz
dp3 r1.w, r1.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
ieq r2.z, cb0[1].w, l(1)
mul r3.x, r0.x, v2.x
mul r3.y, r0.x, cb0[6].x
mov r4.x, v2.x
mov r4.y, cb0[6].x
movc r2.zw, r2.zzzz, r3.xxxy, r4.xxxy
lt r0.x, l(0.000000), r2.z
eq r3.x, r2.z, l(0.000000)
and r3.x, r3.x, l(0x3f800000)
add r3.x, r2.z, r3.x
div r3.y, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[1].y
mov r4.xyz, r0.yzwy
mov r5.xyz, r1.xyzx
mov r3.z, l(1.000000)
mov r3.w, r1.w
mov r4.w, l(0)
mov r5.w, l(0)
mov r6.x, r0.x
loop 
  breakc_z r6.x
  mad r6.yz, r2.xxyx, r5.wwww, v1.xxyx
  mul r7.xy, r6.yzyy, cb0[1].zzzz
  sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t4.xyzw, s1, l(0.000000)
  sample_l_indexable(texture2d)(float,float,float,float) r6.y, r6.yzyy, t2.yxzw, s0, l(0.000000)
  mad r6.z, -r6.y, l(999.000000), l(1000.000000)
  div r6.y, r6.y, r6.z
  ge r6.y, v2.y, r6.y
  div r6.z, r5.w, r3.x
  add r6.z, -r6.z, l(1.000000)
  movc r6.y, r6.y, l(0), r6.z
  mad r4.xyz, r7.xyzx, r6.yyyy, r4.xyzx
  add r3.z, r3.z, r6.y
  max r8.xyz, r7.xyzx, l(0.000000, 0.000000, 0.000000, 0.000000)
  min r8.xyz, r8.xyzx, l(1.490000, 1.490000, 1.490000, 0.000000)
  add r8.xyz, -r8.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
  div r7.xyz, r7.xyzx, r8.xyzx
  mad r5.xyz, r7.xyzx, r6.yyyy, r5.xyzx
  dp3_sat r6.z, r7.xyzx, l(0.300000, 0.590000, 0.110000, 0.000000)
  lt r6.y, l(0.000000), r6.y
  max r6.z, r3.w, r6.z
  movc r3.w, r6.y, r6.z, r3.w
  add r5.w, r3.y, r5.w
  lt r6.x, r5.w, r2.z
  mov r4.w, l(1.000000)
endloop 
mov o0.w, r4.w
add r1.xy, v1.xyxx, -cb0[2].xyxx
dp2 r0.x, r1.xyxx, r1.xyxx
sqrt r0.x, r0.x
eq r1.x, r3.z, l(0.000000)
and r1.x, r1.x, l(0x3f800000)
add r1.x, r1.x, r3.z
div r1.yzw, r4.xxyz, r1.xxxx
min r0.x, r0.x, l(1.000000)
mad r2.x, r0.x, l(-2.000000), l(3.000000)
mul r0.x, r0.x, r0.x
mul r0.x, r0.x, r2.x
add r2.xyz, r1.yzwy, -cb0[3].xyzx
mad_sat r2.xyz, r0.xxxx, r2.xyzx, cb0[3].xyzx
add r2.xyz, -r1.yzwy, r2.xyzx
mad r2.xyz, cb0[3].wwww, r2.xyzx, r1.yzwy
movc r1.yzw, cb0[1].wwww, r2.xxyz, r1.yyzw
mov_sat r3.w, r3.w
div r2.xyz, r5.xyzx, r1.xxxx
dp3 r0.x, r1.yzwy, l(0.300000, 0.590000, 0.110000, 0.000000)
mul r3.xyz, r2.xyzx, l(1.500000, 1.500000, 1.500000, 0.000000)
add r2.xyz, r2.xyzx, l(1.000000, 1.000000, 1.000000, 0.000000)
div r2.xyz, r3.xyzx, r2.xyzx
add_sat r0.x, -r0.x, r3.w
add r0.x, r0.x, l(1.000000)
mul r2.xyz, r0.xxxx, r2.xyzx
add r0.x, -r2.w, l(1.000000)
mul r2.xyz, r2.xyzx, r2.wwww
mad r1.xyz, r0.xxxx, r1.yzwy, r2.xyzx
add r1.xyz, -r0.yzwy, r1.xyzx
mad o0.xyz, cb0[6].yyyy, r1.xyzx, r0.yzwy
ret 
// Approximately 87 instruction slots used
