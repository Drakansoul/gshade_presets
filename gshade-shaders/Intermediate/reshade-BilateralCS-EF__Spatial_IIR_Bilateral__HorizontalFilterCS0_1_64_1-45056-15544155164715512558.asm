//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   float Strength;                    // Offset:    0 Size:     4 [unused]
//   bool Sharpen;                      // Offset:    4 Size:     4 [unused]
//   float WeightExponent;              // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __V__Spatial_IIR_Bilateral__BackBuffer    texture  float4          2d             t0      1 
// V__Spatial_IIR_Bilateral__wTemp1        UAV  float4          2d             u1      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Input
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// no Output
cs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_resource_texture2d (float,float,float,float) t0
dcl_uav_typed_texture2d (float,float,float,float) u1
dcl_input vThreadID.xy
dcl_temps 8
dcl_thread_group 1, 64, 1
ult r0.x, vThreadID.x, l(30)
if_nz r0.x
  ishl r0.x, vThreadID.x, l(7)
  utof r0.x, r0.x
  utof r0.y, vThreadID.y
  add r0.xyz, r0.xyxx, l(0.500000, 0.500000, -31.500000, 0.000000)
  ftoi r1.yz, r0.zzyz
  mov r1.w, l(0)
  ld_indexable(texture2d)(float,float,float,float) r2.xyz, r1.yzww, t0.xyzw
  ftoi r3.y, r0.y
  mov r3.zw, l(0,0,0,0)
  mov r0.yzw, r2.xxyz
  mov r1.yw, l(0,-31,0,-1)
  loop 
    breakc_z r1.w
    itof r2.w, r1.y
    add r2.w, r0.x, r2.w
    ftoi r3.x, r2.w
    ld_indexable(texture2d)(float,float,float,float) r4.xyz, r3.xyzw, t0.xyzw
    add r5.xyz, -r0.yzwy, r4.xyzx
    add r5.xyz, -|r5.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    log r5.xyz, |r5.xyzx|
    mul r5.xyz, r5.xyzx, cb0[0].zzzz
    exp r5.xyz, r5.xyzx
    add r6.xyz, r0.yzwy, -r4.xyzx
    mad r0.yzw, r5.xxyz, r6.xxyz, r4.xxyz
    ige r3.x, r1.y, l(0)
    lt r4.x, r2.w, l(3840.000000)
    and r3.x, r3.x, r4.x
    if_nz r3.x
      ftoi r1.x, r2.w
      store_uav_typed u1.xyzw, r1.xzzz, r0.yzwy
    endif 
    iadd r1.y, r1.y, l(1)
    ilt r1.w, r1.y, l(128)
  endloop 
else 
  ishl r0.x, vThreadID.x, l(7)
  iadd r0.x, r0.x, l(-3712)
  utof r0.x, r0.x
  utof r0.y, vThreadID.y
  add r0.xyzw, r0.xyxx, l(0.500000, 0.500000, 32.500000, 3840.500000)
  ftoi r1.yz, r0.zzyz
  mov r1.w, l(0)
  ld_indexable(texture2d)(float,float,float,float) r2.xyz, r1.yzww, t0.xyzw
  ftoi r3.y, r0.y
  mov r3.zw, l(0,0,0,0)
  mov r4.xyz, r2.xyzx
  mov r0.yz, l(0,31,-1,0)
  loop 
    breakc_z r0.z
    itof r1.y, r0.y
    add r1.w, r0.x, r1.y
    ftoi r3.x, r1.w
    ld_indexable(texture2d)(float,float,float,float) r5.xyz, r3.xyzw, t0.xyzw
    add r6.xyz, -r4.xyzx, r5.xyzx
    add r6.xyz, -|r6.xyzx|, l(1.000000, 1.000000, 1.000000, 0.000000)
    log r6.xyz, |r6.xyzx|
    mul r6.xyz, r6.xyzx, cb0[0].zzzz
    exp r6.xyz, r6.xyzx
    add r7.xyz, r4.xyzx, -r5.xyzx
    mad r4.xyz, r6.xyzx, r7.xyzx, r5.xyzx
    ige r1.w, l(0), r0.y
    if_nz r1.w
      add r1.y, r0.w, r1.y
      ftoi r1.x, r1.y
      store_uav_typed u1.xyzw, r1.xzzz, r4.xyzx
    endif 
    iadd r0.y, r0.y, l(-1)
    ilt r0.z, l(-128), r0.y
  endloop 
endif 
ret 
// Approximately 73 instruction slots used
