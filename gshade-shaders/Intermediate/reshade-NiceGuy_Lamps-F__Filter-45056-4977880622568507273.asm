//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __s2                              sampler      NA          NA             s2      1 
// __V__VarianceTex                  texture  float4          2d            t12      1 
// __V__LightingTex                  texture  float4          2d            t18      1 
// __V__LitHistTex                   texture  float4          2d            t22      1 
// __V__texMotionVectors             texture  float4          2d            t26      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_sampler s0, mode_default
dcl_sampler s2, mode_default
dcl_resource_texture2d (float,float,float,float) t12
dcl_resource_texture2d (float,float,float,float) t18
dcl_resource_texture2d (float,float,float,float) t22
dcl_resource_texture2d (float,float,float,float) t26
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 8
add r0.xy, v1.xyxx, l(0.000130, 0.000234, 0.000000, 0.000000)
sample_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t12.xyzw, s0
sample_indexable(texture2d)(float,float,float,float) r0.yzw, v1.xyxx, t18.wxyz, s0
lt r1.x, l(0.010000), r0.x
if_nz r1.x
  sample_indexable(texture2d)(float,float,float,float) r1.xy, v1.xyxx, t26.xyzw, s2
  add r1.xy, r1.xyxx, v1.xyxx
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t22.xyzw, s0
  mul r2.xyz, r0.yzwy, r0.yzwy
  mov r3.xyz, r2.xyzx
  mov r4.xyz, r0.yzwy
  mov r1.w, l(-1)
  mov r2.w, l(-1)
  loop 
    breakc_z r2.w
    mov r5.xyz, r3.xyzx
    mov r6.xyz, r4.xyzx
    mov r3.w, r1.w
    mov r4.w, l(-1)
    mov r5.w, l(-1)
    loop 
      breakc_z r5.w
      ieq r6.w, r3.w, l(0)
      ieq r7.x, r4.w, l(0)
      and r6.w, r6.w, r7.x
      if_nz r6.w
        mov r3.w, l(0)
        mov r4.w, l(1)
        mov r5.w, l(-1)
        continue 
      endif 
      itof r7.x, r3.w
      itof r7.y, r4.w
      mad r7.xy, r7.xyxx, l(0.000260, 0.000468, 0.000000, 0.000000), v1.xyxx
      sample_l_indexable(texture2d)(float,float,float,float) r7.xyz, r7.xyxx, t18.xyzw, s0, l(0.000000)
      mad r5.xyz, r7.xyzx, r7.xyzx, r5.xyzx
      add r6.xyz, r6.xyzx, r7.xyzx
      iadd r4.w, r4.w, l(1)
      ige r5.w, l(1), r4.w
    endloop 
    mov r3.xyz, r5.xyzx
    mov r4.xyz, r6.xyzx
    iadd r1.w, r3.w, l(1)
    ige r2.w, l(1), r1.w
  endloop 
  mul r2.xyz, r4.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000)
  mul r3.xyz, r3.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000)
  mad r2.xyz, r2.xyzx, r2.xyzx, -r3.xyzx
  sqrt r2.xyz, |r2.xyzx|
  mul r0.x, r0.x, l(8.000000)
  max r0.x, r0.x, l(0.000000)
  min r3.xy, r0.xxxx, l(0.900000, 1.000000, 0.000000, 0.000000)
  add r1.xyz, -r0.yzwy, r1.xyzx
  mad r1.xyz, r3.xxxx, r1.xyzx, r0.yzwy
  add r3.xzw, r0.yyzw, -r2.xxyz
  add r2.xyz, r0.yzwy, r2.xyzx
  max r3.xzw, r1.xxyz, r3.xxzw
  min r2.xyz, r2.xyzx, r3.xzwx
  add r1.xyz, r1.xyzx, -r2.xyzx
  mad o0.xyz, r3.yyyy, r1.xyzx, r2.xyzx
else 
  mov o0.xyz, r0.yzwy
endif 
ret 
// Approximately 64 instruction slots used
