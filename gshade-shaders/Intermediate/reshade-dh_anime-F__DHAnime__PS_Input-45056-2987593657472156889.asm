//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int iBlackLineThickness;           // Offset:    0 Size:     4 [unused]
//   float fBlackLineThreshold;         // Offset:    4 Size:     4 [unused]
//   float iSurfaceBlur;                // Offset:    8 Size:     4
//   float fSaturation;                 // Offset:   12 Size:     4 [unused]
//   float iShadingSteps;               // Offset:   16 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__ReShade__BackBufferTex       texture  float4          2d             t0      1 
// __V__ReShade__DepthBufferTex      texture  float4          2d             t2      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
// SV_TARGET                1   xyzw        1   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[1], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_resource_texture2d (float,float,float,float) t2
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_output o1.xyzw
dcl_temps 6
add r0.xyzw, v1.xyxy, l(-0.000000, -0.000468, 0.000260, 0.000000)
add r1.xyzw, v1.xyxy, l(-0.500000, -0.500000, -0.500000, -0.500468)
sample_l_indexable(texture2d)(float,float,float,float) r2.x, v1.xyxx, t2.xyzw, s0, l(0.000000)
mad r2.y, -r2.x, l(999.000000), l(1000.000000)
div r2.y, r2.x, r2.y
mul r2.xz, r1.yyxy, r2.yyyy
mul r2.xzw, r2.xxyz, l(1000.000000, 0.000000, 1000.000000, 1000.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.x, r0.xyxx, t2.xyzw, s0, l(0.000000)
mad r0.y, -r0.x, l(999.000000), l(1000.000000)
div r3.x, r0.x, r0.y
mul r3.yz, r1.zzwz, r3.xxxx
mad r1.xyz, -r3.xyzx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r2.zwxz
add r0.xy, v1.yxyy, l(-0.500000, -0.499740, 0.000000, 0.000000)
sample_l_indexable(texture2d)(float,float,float,float) r0.z, r0.zwzz, t2.yzxw, s0, l(0.000000)
mad r0.w, -r0.z, l(999.000000), l(1000.000000)
div r3.y, r0.z, r0.w
mul r3.xz, r0.xxyx, r3.yyyy
mad r0.xyz, -r3.xyzx, l(1000.000000, 1000.000000, 1000.000000, 0.000000), r2.xzwx
mul r2.xzw, r0.xxyz, r1.xxyz
mad r0.xyz, r1.zxyz, r0.yzxy, -r2.xzwx
dp3 r0.w, r0.xyzx, r0.xyzx
rsq r0.w, r0.w
mul r0.xyz, r0.wwww, r0.xyzx
mad o0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000), l(0.500000, 0.500000, 0.500000, 0.000000)
lt r0.x, l(0.000000), cb0[0].z
if_nz r0.x
  ftoi r0.x, -cb0[0].z
  round_z r0.y, -cb0[0].z
  ge r0.y, cb0[0].z, r0.y
  mul r0.z, cb0[0].z, cb0[0].z
  mul r0.w, r2.y, l(1000.000000)
  mov r1.xyzw, l(0,0,0,0)
  mov r2.x, l(0)
  mov r2.yz, r0.xxyx
  loop 
    breakc_z r2.z
    itof r3.x, r2.y
    mov r4.xyzw, r1.xyzw
    mov r2.w, r2.x
    mov r3.zw, r0.xxxy
    loop 
      breakc_z r3.w
      itof r3.y, r3.z
      dp2 r5.x, r3.xyxx, r3.xyxx
      ge r5.x, r0.z, r5.x
      if_nz r5.x
        mad r5.xy, r3.xyxx, l(0.000260, 0.000468, 0.000000, 0.000000), v1.xyxx
        sample_l_indexable(texture2d)(float,float,float,float) r3.y, r5.xyxx, t2.yxzw, s0, l(0.000000)
        mad r5.z, -r3.y, l(999.000000), l(1000.000000)
        div r3.y, r3.y, r5.z
        mul r3.y, r3.y, l(1000.000000)
        div r3.y, r0.w, r3.y
        ge r5.z, r3.y, l(0.950000)
        ge r3.y, l(1.050000), r3.y
        and r3.y, r3.y, r5.z
        if_nz r3.y
          sample_l_indexable(texture2d)(float,float,float,float) r5.xyzw, r5.xyxx, t0.xyzw, s0, l(0.000000)
          add r4.xyzw, r4.xyzw, r5.xyzw
          iadd r2.w, r2.w, l(1)
        endif 
      endif 
      iadd r3.z, r3.z, l(1)
      itof r3.y, r3.z
      ge r3.w, cb0[0].z, r3.y
    endloop 
    mov r1.xyzw, r4.xyzw
    mov r2.x, r2.w
    iadd r2.y, r2.y, l(1)
    itof r3.x, r2.y
    ge r2.z, cb0[0].z, r3.x
  endloop 
  itof r0.x, r2.x
  div o1.xyzw, r1.xyzw, r0.xxxx
else 
  sample_l_indexable(texture2d)(float,float,float,float) o1.xyzw, v1.xyxx, t0.xyzw, s0, l(0.000000)
endif 
mov o0.w, l(1.000000)
ret 
// Approximately 78 instruction slots used
