//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer _Globals
// {
//
//   int Blend;                         // Offset:    0 Size:     4 [unused]
//   float smooth;                      // Offset:    4 Size:     4 [unused]
//   float Rim;                         // Offset:    8 Size:     4 [unused]
//   float3 light;                      // Offset:   16 Size:    12 [unused]
//   int BLUR_ITERATION_;               // Offset:   28 Size:     4
//   float bloom;                       // Offset:   32 Size:     4 [unused]
//   float MaxDepth;                    // Offset:   36 Size:     4 [unused]
//   float MinDepth;                    // Offset:   40 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// __s0                              sampler      NA          NA             s0      1 
// __V__TexRim                       texture  float4          2d             t8      1 
// _Globals                          cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// TEXCOORD                 0   xy          1     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyz         0   TARGET   float   xyz 
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[2], immediateIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t8
dcl_input_ps linear v1.xy
dcl_output o0.xyz
dcl_temps 4
ineg r0.x, cb0[1].w
ige r0.y, cb0[1].w, r0.x
mov r1.y, l(0)
mov r2.xyz, l(0,0,0,0)
mov r0.zw, r0.xxxy
loop 
  breakc_z r0.w
  imax r1.z, -r0.z, r0.z
  iadd r1.z, -r1.z, cb0[1].w
  ishl r1.w, r0.z, l(1)
  itof r1.w, r1.w
  add r1.w, r1.w, l(0.500000)
  mul r1.x, r1.w, l(0.000260)
  add r1.xw, r1.xxxy, v1.xxxy
  sample_indexable(texture2d)(float,float,float,float) r3.xyz, r1.xwxx, t8.xyzw, s0
  itof r1.x, r1.z
  mad r2.xyz, r1.xxxx, r3.xyzx, r2.xyzx
  iadd r0.z, r0.z, l(1)
  ige r0.w, cb0[1].w, r0.z
endloop 
imul null, r0.x, cb0[1].w, cb0[1].w
itof r0.x, r0.x
div o0.xyz, r2.xyzx, r0.xxxx
ret 
// Approximately 24 instruction slots used
